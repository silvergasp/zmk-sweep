/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define SETTINGS 6

// -----------------

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

&sk { ignore-modifiers; };

/ {
    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.

        unstick: unstick {
            label = "ZM_unstick";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys
        // internal-left & external-right thumb keys
        // both left thumb keys

        combo_settings {
            timeout-ms = <300>;
            key-positions = <30 31>;
            bindings = <&mo 5>;
        };

        quick_escape {
            bindings = <&kp ESC>;
            key-positions = <16 17>;
        };

        function_layer {
            bindings = <&mo 4>;
            key-positions = <32 33>;
        };
    };

    behaviors {
        hold_layer: hold_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        default_layer {
            bindings = <
&hold_layer 2 Q   &kp W  &kp E  &kp R  &kp T            &kp Y      &kp U   &kp I      &kp O    &kp P
&mt LEFT_SHIFT A  &kp S  &kp D  &kp F  &kp G            &kp H      &kp J   &kp K      &kp L    &mt RIGHT_SHIFT SINGLE_QUOTE
&kp Z             &kp X  &kp C  &kp V  &kp B            &kp N      &kp M   &kp COMMA  &kp DOT  &kp SLASH
                                &mo 1  &kp BACKSPACE    &kp SPACE  &tog 3
            >;
        };

        ext_layer {
            bindings = <
&kp ESC    &trans     &trans      &trans     &trans       &kp PG_UP     &kp HOME  &kp UP    &kp END    &kp CAPS
&sk LALT   &sk LGUI   &sk LSHIFT  &sk LCTRL  &kp RALT     &kp PG_DN     &kp LEFT  &kp DOWN  &kp RIGHT  &mt RIGHT_SHIFT ENTER
&kp LC(Z)  &kp LC(X)  &kp LC(C)   &kp LC(V)  &kp TAB      &kp LC(BSPC)  &kp BSPC  &trans    &kp DEL    &trans
                                  &trans     &kp LCTRL    &kp ENTER     &mo 5
            >;
        };

        prog {
            bindings = <
&kp GRAVE  &trans  &trans  &trans  &kp N1    &kp LS(EXCL)  &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)
&trans     &trans  &trans  &trans  &kp N2    &kp LS(LPAR)  &kp LS(RPAR)  &kp LBKT       &kp RBKT      &mt RIGHT_SHIFT SEMICOLON
&trans     &trans  &trans  &trans  &kp N3    &kp COMMA     &kp DOT       &kp LS(LBRC)   &kp LS(RBRC)  &kp BACKSLASH
                           &trans  &trans    &trans        &trans
            >;
        };

        numpad {
            bindings = <
&trans  &trans     &trans     &trans     &kp KP_NUMLOCK    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS      &kp KP_ASTERISK
&trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans            &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_SUBTRACT  &mt RIGHT_SHIFT KP_DIVIDE
&trans  &trans     &trans     &trans     &trans            &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT       &kp KP_ENTER
                              &trans     &trans            &kp KP_NUMBER_0  &trans
            >;
        };

        fnc_layer {
            bindings = <
&kp F1  &kp F2          &kp F3            &kp F4      &kp F5               &kp F6   &kp F7   &kp F8  &kp F9  &kp F10
&trans  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_UP      &kp F11  &kp F12  &trans  &trans  &trans
&trans  &trans          &none             &none       &kp C_VOLUME_DOWN    &none    &none    &none   &none   &none
                                          &none       &kp C_MUTE           &none    &none
            >;
        };

        settings_layer {
            bindings = <
&bootloader  &none  &none  &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 3  &none  &unstick  &none  &bootloader
&none        &none  &none  &none       &bt BT_SEL 1    &bt BT_SEL 4  &none  &none     &none  &none
&none        &none  &none  &none       &bt BT_SEL 2    &bt BT_SEL 5  &none  &none     &none  &none
                           &none       &none           &none         &none
            >;
        };
    };
};

